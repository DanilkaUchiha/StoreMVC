@model StoreMVC.Models.ViewModels.ProductViewModel
@using StoreMVC.Extensions

@{
    ViewData["Title"] = "Create";
}

<h2 class="text-info mt-1">Create Product</h2>

<form enctype="multipart/form-data" method="post" asp-action="Create">
    <div class="p-4 rounded border">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Product.Name"></label>
            </div>
            <div class="col-5">
                <input class="form-control" asp-for="Product.Name" placeholder="Type the name..." />
            </div>
            <span asp-validation-for="Product.Name" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Product.Price"></label>
            </div>
            <div class="col-5">
                <input class="form-control" asp-for="Product.Price" />
            </div>
            <span asp-validation-for="Product.Price" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Product.ShadeColor"></label>
            </div>
            <div class="col-5">
                <input class="form-control" asp-for="Product.ShadeColor" />
            </div>
            <span asp-validation-for="Product.ShadeColor" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Product.Available"></label>
            </div>
            <div class="col-5">
                <div class="custom-control custom-switch">
                    <input class="custom-control-input" type="checkbox" asp-for="Product.Available" id="AvailableOrNot" />
                    <label class="custom-control-label" for="AvailableOrNot">Toggle to make the product available</label>
                </div>
            </div>
            <span asp-validation-for="Product.Available" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Product.Image"></label>
            </div>
            <div class="col-5">
                <div class="custom-file">
                    <input class="custom-file-input" type="file" id="customFile" name="Files" accept="image/*" />
                    <label class="custom-file-label" for="customFile">Choose file</label>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Product.ProductType"></label>
            </div>
            <div class="col-5">
                <select class="custom-select" asp-for="Product.ProductTypeId" asp-items="Model.ProductTypes.ToSelectListItem(Model.Product.ProductTypeId)">
                    <option value="">Select product type</option>
                </select>
            </div>
            <span asp-validation-for="Product.ProductTypeId" class="text-danger"></span>
        </div>
        <div class="form-group row">
            <div class="col-2">
                <label asp-for="Product.SpecialTag"></label>
            </div>
            <div class="col-5">
                <select class="custom-select" asp-for="Product.SpecialTagId" asp-items="Model.SpecialTags.ToSelectListItem(Model.Product.SpecialTagId)">
                    <option value="">Select special tag</option>
                </select>
            </div>
            <span asp-validation-for="Product.SpecialTagId" class="text-danger"></span>
        </div>
        <br />
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Create" />
            <a asp-action="Index" class="btn btn-success">Back to products</a>
        </div>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
