@model IEnumerable<StoreMVC.Models.Product>

@{
    ViewData["Title"] = "Index";
}

@if (TempData["SM"] != null)
{
    <div class="row text-center">
        <div class="col-12 alert alert-success">
            @TempData["SM"]
        </div>
    </div>
}

<div class="row mt-2">
    <div class="col-6">
        <h2 class="text-info">Product list</h2>
    </div>
    <div class="col-6 text-right">
        <a asp-action="Create" class="btn btn-info">
            <i class="fas fa-plus"></i>
            New Product
        </a>
    </div>
</div>


<div class="mt-1">
    <table class="table table-striped border">
        <thead>
            <tr class="table-info">
                <th>@Html.DisplayNameFor(x => x.Name)</th>
                <th>@Html.DisplayNameFor(x => x.Price)</th>
                <th>@Html.DisplayNameFor(x => x.ShadeColor)</th>
                <th>@Html.DisplayNameFor(x => x.Available)</th>
                <th>@Html.DisplayNameFor(x => x.ProductType)</th>
                <th>@Html.DisplayNameFor(x => x.SpecialTag)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>

                <td>@Html.DisplayFor(x => item.Name)</td>
                <td>
                    @($"{item.Price:C}")
                </td>
                <td>@Html.DisplayFor(x => item.ShadeColor)</td>
                <td>@Html.DisplayFor(x => item.Available)</td>
                <td>@Html.DisplayFor(x => item.ProductType.Name)</td>
                <td>
                    @if (!item.SpecialTag.Name.Equals("-NONE-"))
                    {
                        @Html.DisplayFor(x => item.SpecialTag.Name)
                    }
                </td>

                <partial name="_TableButtonPartial" model="item.Id" />

            </tr>
            }
        </tbody>
    </table>
</div>